/**
 * Joins and exports the translated strings.
 */
declare const _default: {
    'Asynchronous Continuations': string;
    'Candidate starter': string;
    create: string;
    'Create new list item': string;
    Documentation: string;
    General: string;
    'Execution listeners': string;
    'Extension properties': string;
    'External task': string;
    Forms: string;
    'History cleanup': string;
    Inputs: string;
    'Job execution': string;
    Outputs: string;
    Tasklist: string;
    'Activate the create/remove space tool': string;
    'Activate the global connect tool': string;
    'Activate the hand tool': string;
    'Activate the lasso tool': string;
    'Ad-hoc': string;
    'Add Lane above': string;
    'Add Lane below': string;
    'Append compensation activity': string;
    'Append {type}': string;
    'Business Rule Task': string;
    'Call Activity': string;
    'Cancel Boundary Event': string;
    'Cancel End Event': string;
    'Change type': string;
    'Collapsed Pool': string;
    'Compensation Boundary Event': string;
    'Compensation End Event': string;
    'Compensation Intermediate Throw Event': string;
    'Compensation Start Event': string;
    'Complex Gateway': string;
    'Conditional Boundary Event (non-interrupting)': string;
    'Conditional Boundary Event': string;
    'Conditional Intermediate Catch Event': string;
    'Conditional Start Event (non-interrupting)': string;
    'Conditional Start Event': string;
    'Connect using Association': string;
    'Connect using DataInputAssociation': string;
    'Connect using Sequence/MessageFlow or Association': string;
    'Create IntermediateThrowEvent/BoundaryEvent': string;
    'Create Pool/Participant': string;
    'Create expanded SubProcess': string;
    'Create {type}': string;
    'Divide into three Lanes': string;
    'Divide into two Lanes': string;
    'End Event': string;
    'Error Boundary Event': string;
    'Error End Event': string;
    'Error Start Event': string;
    'Escalation Boundary Event (non-interrupting)': string;
    'Escalation Boundary Event': string;
    'Escalation End Event': string;
    'Escalation Intermediate Throw Event': string;
    'Escalation Start Event (non-interrupting)': string;
    'Escalation Start Event': string;
    'Event Sub Process': string;
    'Event based Gateway': string;
    'Exclusive Gateway': string;
    'Expanded Pool': string;
    'Inclusive Gateway': string;
    'Intermediate Throw Event': string;
    'Link Intermediate Catch Event': string;
    'Link Intermediate Throw Event': string;
    Loop: string;
    'Manual Task': string;
    'Message Boundary Event (non-interrupting)': string;
    'Message Boundary Event': string;
    'Message End Event': string;
    'Message Intermediate Catch Event': string;
    'Message Intermediate Throw Event': string;
    'Message Start Event (non-interrupting)': string;
    'Message Start Event': string;
    'Parallel Gateway': string;
    'Parallel Multi Instance': string;
    'Receive Task': string;
    Remove: string;
    'Script Task': string;
    'Send Task': string;
    'Sequential Multi Instance': string;
    'Service Task': string;
    'Signal Boundary Event (non-interrupting)': string;
    'Signal Boundary Event': string;
    'Signal End Event': string;
    'Signal Intermediate Catch Event': string;
    'Signal Intermediate Throw Event': string;
    'Signal Start Event (non-interrupting)': string;
    'Signal Start Event': string;
    'Start Event': string;
    'Sub Process (collapsed)': string;
    'Sub Process (expanded)': string;
    'Sub Process': string;
    Task: string;
    'Terminate End Event': string;
    'Timer Boundary Event (non-interrupting)': string;
    'Timer Boundary Event': string;
    'Timer Intermediate Catch Event': string;
    'Timer Start Event (non-interrupting)': string;
    'Timer Start Event': string;
    Transaction: string;
    'User Task': string;
    'already rendered {element}': string;
    'diagram not part of bpmn:Definitions': string;
    'element required': string;
    'element {element} referenced by {referenced}#{property} not yet drawn': string;
    'failed to import {element}': string;
    'flow elements must be children of pools/participants': string;
    'more than {count} child lanes': string;
    'no diagram to display': string;
    'no parent for {element} in {parent}': string;
    'no process or collaboration to display': string;
    'no shape type specified': string;
    'out of bounds release': string;
};
export default _default;
